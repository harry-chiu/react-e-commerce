{"version":3,"sources":["components/Breadcrumbs/index.js","constants/cartConstants.js","constants/formConstants.js","actions/cartActions.js","actions/formActions.js","components/PriceTotal/index.js","components/ShoppingCart/index.js","components/Layout/index.js","components/CategoryCard/index.js","components/ProductCard/index.js","containers/Home/index.js","containers/Product/index.js","containers/ProductDetail/index.js","containers/CheckOut/components/Stepper.js","containers/CheckOut/components/ButtonGroup.js","containers/CheckOut/components/Cart.js","containers/CheckOut/components/Delivery.js","containers/CheckOut/components/Payment.js","containers/CheckOut/components/Confirmation.js","containers/CheckOut/components/Completed.js","containers/CheckOut/index.js","containers/App/index.js","reducers/cartReducer.js","reducers/formReducer.js","reducers/index.js","index.js"],"names":["pathnameMap","useStyles","makeStyles","theme","card","margin","spacing","padding","navLink","color","textDecoration","BreadcrumbsWrapper","classes","pathname","useLocation","pathnames","split","Card","variant","className","Breadcrumbs","Typography","map","index","match","title","length","key","to","ADD_PRODUCT","cartConstants","REMOVE_PRODUCT","product","amount","productsInCart","JSON","parse","localStorage","getItem","push","setItem","stringify","type","payload","splice","SET_FORM","formConstants","fieldName","value","price","palette","secondary","main","fontWeight","fontSize","typography","h6","PriceTotal","useState","total","setTotal","useSelector","state","cart","useEffect","allPrices","reduce","accumlator","currentValue","removeProduct","cartActions","fab","position","bottom","right","background","list","minWidth","pointer","cursor","hint","height","textAlign","text","subtitle2","hintIcon","width","menuBottom","checkout","ShoppingCart","dispatch","useDispatch","anchorEl","setAnchorEl","handleClose","Fab","onClick","event","currentTarget","ShoppingCartOutlined","Menu","open","Boolean","onClose","List","ListItem","ListItemText","primary","ListItemSecondaryAction","Close","Divider","Grid","container","direction","item","button","ListItemIcon","Avatar","LocalMall","DeleteOutline","handleRemoveProduct","Button","Layout","children","CssBaseline","Container","display","flexDirection","alignItems","justifyContent","transition","transform","CategoryCard","category","fakeImage","recommend","h5","breakpoints","down","horizentalPadding","ProductCard","verticalMargin","xs","banner","bannerTitle","Home","clsx","categories","id","sm","md","lg","products","toolbar","select","Product","categoryFromHome","setCategory","filteredProducts","setFilteredProducts","filter","Select","onChange","target","MenuItem","addProduct","h4","content","textField","green","success","light","ProductDetail","useParams","setAmount","recommendProducts","setRecommendProducts","setOpen","parseInt","productsWithoutCurrentProduct","randomNumbers","randomRecommendProducts","randomNumber","Math","floor","random","includes","IconButton","Remove","TextField","size","isNaN","Add","disabled","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","Done","stepLabel","StepperWrapper","props","step","Hidden","smUp","renderMobileStepper","smDown","Stepper","activeStep","Step","StepLabel","buttonGroup","float","hidden","ButtonGroup","setStep","hideInMobile","Cart","Table","TableHead","TableRow","TableCell","align","TableBody","setForm","formActions","maxWidth","formControl","marginBottom","Delivery","confirmation","form","fullWidth","label","firstName","lastName","phone","email","FormControl","InputLabel","country","city","address","months","years","Array","keys","icons","name","src","cvv","iconContainer","icon","border","boxSizing","active","borderColor","Payment","selected","setSelected","handleSelect","cardholderName","cardNumber","endMonth","month","endYear","year","priceTotal","paddingTop","Confirmation","Completed","CheckCircleOutline","minHeight","footer","marginTop","CheckOut","CardHeader","CardContent","renderContent","justify","App","basename","process","path","exact","component","initialState","combineReducers","action","store","createStore","reducers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f58ac02d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n    NavLink,\r\n    useLocation,\r\n} from 'react-router-dom';\r\nimport {\r\n    Card,\r\n    Breadcrumbs,\r\n    Typography,\r\n    makeStyles,\r\n} from '@material-ui/core';\r\n\r\nconst pathnameMap = {\r\n    '/': 'Home',\r\n    '/product': 'Product',\r\n    '/checkout': 'Check Out',\r\n    '/sign-in': 'Sign In',\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(2, 0),\r\n        padding: theme.spacing(1),\r\n    },\r\n    navLink: {\r\n        color: '#737373',\r\n        textDecoration: 'none',\r\n        '&:hover': {\r\n            textDecoration: 'underline',\r\n        },\r\n    },\r\n}));\r\n\r\nconst BreadcrumbsWrapper = () => {\r\n    const classes = useStyles();\r\n    const { pathname } = useLocation();\r\n\r\n    const pathnames = pathname.split('/');\r\n\r\n    return (\r\n        <Card variant=\"outlined\" className={classes.card}>\r\n            <Breadcrumbs>\r\n                {pathname === '/' ? (\r\n                    <Typography variant=\"h5\" color=\"secondary\">\r\n                        {pathnameMap[pathname]}\r\n                    </Typography>\r\n                ) : (\r\n                        pathnames.map((pathname, index) => {\r\n                            const match = `/${pathname}`;\r\n                            const title = pathnameMap[match] || pathname;\r\n\r\n                            if (index === pathnames.length - 1) {\r\n                                return (\r\n                                    <Typography key={index} variant=\"h5\" color=\"secondary\">\r\n                                        {title}\r\n                                    </Typography>\r\n                                );\r\n                            }\r\n\r\n                            return (\r\n                                <NavLink key={index} to={match} className={classes.navLink}>\r\n                                    <Typography variant=\"h5\">\r\n                                        {title}\r\n                                    </Typography>\r\n                                </NavLink>\r\n                            );\r\n                        })\r\n                    )}\r\n            </Breadcrumbs>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default BreadcrumbsWrapper;","export default {\r\n    ADD_PRODUCT: 'ADD_PRODUCT',\r\n    REMOVE_PRODUCT: 'REMOVE_PRODUCT',\r\n};","export default {\r\n    SET_FORM: 'SET_FORM',\r\n};","import { cartConstants } from '../constants';\r\n\r\nconst {\r\n    ADD_PRODUCT,\r\n    REMOVE_PRODUCT,\r\n} = cartConstants;\r\n\r\nconst addProduct = (product, amount) => {\r\n    const productsInCart = JSON.parse(localStorage.getItem('cart')) || [];\r\n\r\n    productsInCart.push({ ...product, amount });\r\n    localStorage.setItem('cart', JSON.stringify(productsInCart));\r\n\r\n    return {\r\n        type: ADD_PRODUCT,\r\n        payload: productsInCart,\r\n    };\r\n};\r\n\r\nconst removeProduct = (index) => {\r\n    const productsInCart = JSON.parse(localStorage.getItem('cart')) || [];\r\n    productsInCart.splice(index, 1);\r\n    localStorage.setItem('cart', JSON.stringify(productsInCart));\r\n\r\n    return {\r\n        type: REMOVE_PRODUCT,\r\n        payload: productsInCart,\r\n    };\r\n};\r\n\r\nexport default {\r\n    addProduct,\r\n    removeProduct,\r\n};","import { formConstants } from '../constants';\r\n\r\nconst { SET_FORM } = formConstants;\r\n\r\nconst setForm = (fieldName, value) => {\r\n    return {\r\n        type: SET_FORM,\r\n        payload: {\r\n            fieldName,\r\n            value,\r\n        },\r\n    };\r\n};\r\n\r\nexport default {\r\n    setForm,\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Typography, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    price: {\r\n        color: theme.palette.secondary.main,\r\n        fontWeight: 'bold',\r\n        fontSize: theme.typography.h6.fontSize,\r\n    },\r\n}));\r\n\r\nconst PriceTotal = () => {\r\n    const classes = useStyles();\r\n    const [total, setTotal] = useState(0);\r\n    const { productsInCart } = useSelector(state => state.cart);\r\n\r\n    useEffect(() => {\r\n        if (productsInCart.length > 0) {\r\n            const reducer = (accumlator, currentValue) => accumlator + currentValue;\r\n            const allPrices = productsInCart.map(product => product.price * product.amount);\r\n            setTotal(allPrices.reduce(reducer));\r\n        }\r\n    }, [productsInCart]);\r\n\r\n    return (\r\n        <Typography variant=\"subtitle1\">\r\n            Total <span className={classes.price}>$ {total}</span>\r\n        </Typography>\r\n    );\r\n};\r\n\r\nexport default PriceTotal;","import React, { useState } from 'react';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    Fab,\r\n    Grid,\r\n    Menu,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    ListItemSecondaryAction,\r\n    Divider,\r\n    makeStyles,\r\n    Avatar,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport {\r\n    ShoppingCartOutlined as ShoppingCartOutlinedIcon,\r\n    LocalMall as LocalMallIcon,\r\n    Close as CloseIcon,\r\n    DeleteOutline as DeleteOutlineIcon,\r\n} from '@material-ui/icons';\r\n\r\nimport { cartActions } from '../../actions';\r\nimport PriceTotal from '../../components/PriceTotal';\r\n\r\nconst { removeProduct } = cartActions;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        '&:hover': {\r\n            background: '#e40051',\r\n        },\r\n    },\r\n    list: {\r\n        minWidth: 320,\r\n        padding: 0,\r\n    },\r\n    pointer: {\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            color: '#e91e63',\r\n        },\r\n    },\r\n    hint: {\r\n        height: 240,\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        fontSize: theme.typography.subtitle2.fontSize,\r\n    },\r\n    hintIcon: {\r\n        width: 64,\r\n        height: 64,\r\n    },\r\n    menuBottom: {\r\n        padding: theme.spacing(1, 2),\r\n    },\r\n    navLink: {\r\n        textDecoration: 'none',\r\n    },\r\n    checkout: {\r\n        '&:hover': {\r\n            background: '#e40051',\r\n        },\r\n    },\r\n}));\r\n\r\nconst ShoppingCart = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const { pathname } = useLocation();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const { productsInCart } = useSelector(state => state.cart);\r\n\r\n    const handleClick = event => setAnchorEl(event.currentTarget);\r\n    const handleClose = () => setAnchorEl(null);\r\n    const handleRemoveProduct = index => dispatch(removeProduct(index));\r\n\r\n    if (pathname === '/checkout') {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Fab color=\"secondary\" className={classes.fab} onClick={handleClick}>\r\n                <ShoppingCartOutlinedIcon fontSize=\"large\" />\r\n            </Fab>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <List className={classes.list}>\r\n                    <ListItem>\r\n                        <ListItemText primary=\"Products in Cart\" />\r\n                        <ListItemSecondaryAction>\r\n                            <CloseIcon onClick={handleClose} className={classes.pointer} />\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <Divider />\r\n                    {productsInCart.length === 0 && (\r\n                        <ListItem className={classes.hint}>\r\n                            <Grid container direction=\"column\">\r\n                                <Grid item>\r\n                                    <ShoppingCartOutlinedIcon className={classes.hintIcon} />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <ListItemText primary=\"You don't have any product in cart.\" />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </ListItem>\r\n                    )}\r\n                    {productsInCart.map(({ title, price, amount }, index) => (\r\n                        <ListItem button key={index}>\r\n                            <ListItemIcon>\r\n                                <Avatar>\r\n                                    <LocalMallIcon />\r\n                                </Avatar>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={`${title} * ${amount}`} secondary={`$ ${price * amount}`} />\r\n                            <ListItemSecondaryAction>\r\n                                <DeleteOutlineIcon onClick={() => handleRemoveProduct(index)} className={classes.pointer} />\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    ))}\r\n                    <Divider />\r\n                    <ListItem className={classes.menuBottom}>\r\n                        <ListItemText primary={<PriceTotal />} />\r\n                        <ListItemSecondaryAction>\r\n                            <NavLink to=\"/checkout\" className={classes.navLink}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.checkout}\r\n                                >\r\n                                    Check Out\r\n                                </Button>\r\n                            </NavLink>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                </List>\r\n            </Menu>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ShoppingCart;","import React from 'react';\r\nimport {\r\n    Container,\r\n    CssBaseline,\r\n} from '@material-ui/core';\r\n\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport ShoppingCart from '../ShoppingCart';\r\n\r\nconst Layout = ({ children }) => {\r\n    return (\r\n        <div>\r\n            <CssBaseline />\r\n            <main>\r\n                <Container>\r\n                    <Breadcrumbs />\r\n                    {children}\r\n                </Container>\r\n            </main>\r\n            <ShoppingCart />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;","import React from 'react';\r\nimport {\r\n    Card,\r\n    Typography,\r\n    makeStyles,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        transition: '0.2s ease-in-out',\r\n        height: 200,\r\n        '&:hover': {\r\n            transform: 'scale(1.1)',\r\n        },\r\n    },\r\n})\r\n\r\nconst CategoryCard = ({ category }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card variant=\"outlined\" className={classes.card}>\r\n            <Typography variant=\"h5\" color=\"textSecondary\">\r\n                {category}\r\n            </Typography>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default CategoryCard;","import React from 'react';\r\nimport {\r\n    Grid,\r\n    Card,\r\n    Typography,\r\n    makeStyles,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        transition: '0.2s ease-in-out',\r\n        '&:hover': {\r\n            transform: 'scale(1.1)',\r\n        },\r\n    },\r\n    fakeImage: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n        height: recommend => recommend ? 120 : 180,\r\n        color: theme.palette.text.secondary,\r\n        fontSize: theme.typography.h5.fontSize,\r\n        background: '#eeeeee',\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: recommend => recommend ? 240 : 240,\r\n        },\r\n    },\r\n    price: {\r\n        color: '#e91e63',\r\n    },\r\n    horizentalPadding: {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst ProductCard = ({ title, price, recommend = false }) => {\r\n    const classes = useStyles(recommend);\r\n\r\n    return (\r\n        <Card variant=\"outlined\" className={classes.card}>\r\n            <div className={classes.fakeImage}>\r\n                Image\r\n            </div>\r\n            <div className={classes.horizentalPadding}>\r\n                <Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    className={classes.verticalMargin}\r\n                    spacing={recommend ? null : 1}\r\n                >\r\n                    <Grid item xs={recommend ? 12 : 'auto'}>\r\n                        <Typography variant={recommend ? 'h6' : 'h5'} color=\"textSecondary\" >\r\n                            {title}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"subtitle1\" className={classes.price}>\r\n                            $ {price}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                {!recommend && (\r\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce commodo quam vel aliquet sodales. Cras sit amet mollis turpis.\r\n                    </Typography>\r\n                )}\r\n            </div>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ProductCard;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport {\r\n    Grid,\r\n    Card,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\n\r\nimport CategoryCard from '../../components/CategoryCard';\r\nimport ProductCard from '../../components/ProductCard';\r\n\r\nimport categories from '../../database/categories';\r\nimport products from '../../database/products';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    title: {\r\n        margin: theme.spacing(1, 0),\r\n    },\r\n    banner: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n        height: 360,\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: 240,\r\n        },\r\n    },\r\n    bannerTitle: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: 48,\r\n        },\r\n    },\r\n    navLink: {\r\n        textDecoration: 'none',\r\n    },\r\n}));\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <NavLink to=\"/product/1\" className={classes.navLink}>\r\n                <Card variant=\"outlined\" className={clsx(classes.card, classes.banner)}>\r\n                    <Typography variant=\"h1\" color=\"textSecondary\" className={classes.bannerTitle}>\r\n                        Banner\r\n                    </Typography>\r\n                </Card>\r\n            </NavLink>\r\n\r\n            <Typography variant=\"h4\" className={classes.title}>\r\n                Product Categories\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                {categories.map(({ id, category }) => (\r\n                    <Grid item xs={12} sm={6} md={4} lg={3} key={id}>\r\n                        <NavLink to={{ category, pathname: \"/product\" }} className={classes.navLink}>\r\n                            <CategoryCard category={category} />\r\n                        </NavLink>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n\r\n            <Typography variant=\"h4\" className={classes.title}>\r\n                Popular Products\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                {products.map(({ id, title, price }) => (\r\n                    <Grid item xs={12} sm={6} md={4} lg={3} key={id}>\r\n                        <NavLink to={`/product/${id}`} className={classes.navLink}>\r\n                            <ProductCard title={title} price={price} />\r\n                        </NavLink>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {\r\n    Grid,\r\n    Select,\r\n    MenuItem,\r\n    makeStyles,\r\n} from '@material-ui/core';\r\n\r\nimport products from '../../database/products';\r\nimport ProductCard from '../../components/ProductCard';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    navLink: {\r\n        textDecoration: 'none',\r\n    },\r\n    toolbar: {\r\n        margin: theme.spacing(2, 0),\r\n    },\r\n    select: {\r\n        width: 120,\r\n    },\r\n}));\r\n\r\nconst Product = () => {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    const categoryFromHome = location.category;\r\n    const [category, setCategory] = useState('All');\r\n    const [filteredProducts, setFilteredProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setCategory(categoryFromHome || 'All');\r\n    }, [categoryFromHome]);\r\n\r\n    useEffect(() => {\r\n        if (category === 'All') {\r\n            setFilteredProducts(products);\r\n        } else {\r\n            setFilteredProducts(products.filter(product => product.category === category));\r\n        }\r\n    }, [category]);\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.toolbar}>\r\n                <Select\r\n                    className={classes.select}\r\n                    value={category}\r\n                    onChange={event => setCategory(event.target.value)}\r\n                >\r\n                    <MenuItem value=\"All\">All</MenuItem>\r\n                    <MenuItem value=\"Clothes\">Clothes</MenuItem>\r\n                    <MenuItem value=\"Pants\">Pants</MenuItem>\r\n                    <MenuItem value=\"Shoes\">Shoes</MenuItem>\r\n                    <MenuItem value=\"Decorations\">Decorations</MenuItem>\r\n                </Select>\r\n            </div>\r\n            <Grid container spacing={3}>\r\n                {filteredProducts.map(({ id, title, price }) => (\r\n                    <Grid item xs={12} sm={6} md={4} lg={3} key={id}>\r\n                        <NavLink to={`/product/${id}`} className={classes.navLink}>\r\n                            <ProductCard title={title} price={price} />\r\n                        </NavLink>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Product;","import React, { useState, useEffect } from 'react';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport clsx from 'clsx';\r\nimport {\r\n    Grid,\r\n    Card,\r\n    Button,\r\n    Divider,\r\n    Typography,\r\n    makeStyles,\r\n    TextField,\r\n    IconButton,\r\n    Snackbar,\r\n} from '@material-ui/core';\r\nimport {\r\n    Add as AddIcon,\r\n    Remove as RemoveIcon,\r\n    Done as DoneIcon,\r\n} from '@material-ui/icons'\r\n\r\nimport { cartActions } from '../../actions';\r\nimport products from '../../database/products';\r\nimport ProductCard from '../../components/ProductCard';\r\n\r\nconst { addProduct } = cartActions;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    fakeImage: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: 720,\r\n        background: '#eeeeee',\r\n        fontSize: theme.typography.h4.fontSize,\r\n        color: theme.palette.text.secondary,\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: 240,\r\n        },\r\n    },\r\n    verticalMargin: {\r\n        margin: theme.spacing(2, 0),\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    price: {\r\n        color: '#e91e63',\r\n    },\r\n    textField: {\r\n        width: 56,\r\n        '& > .MuiInputBase-root > .MuiInputBase-input': {\r\n            textAlign: 'center',\r\n        },\r\n    },\r\n    button: {\r\n        '&:hover': {\r\n            background: '#e40051',\r\n        },\r\n    },\r\n    navLink: {\r\n        textDecoration: 'none',\r\n    },\r\n    green: {\r\n        color: theme.palette.success.light,\r\n    },\r\n}));\r\n\r\nconst ProductDetail = () => {\r\n    const classes = useStyles();\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    const [amount, setAmount] = useState(0);\r\n    const [recommendProducts, setRecommendProducts] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const product = products.filter(product => product.id === parseInt(id))[0];\r\n    const { title, price } = product;\r\n\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const increaseAmount = () => {\r\n        if (amount < 1000) {\r\n            setAmount(amount + 1);\r\n        }\r\n    };\r\n\r\n    const decreaseAmount = () => {\r\n        if (amount > 0) {\r\n            setAmount(amount - 1);\r\n        }\r\n    };\r\n\r\n    const handleAmountOnChange = (event) => {\r\n        const value = parseInt(event.target.value);\r\n\r\n        if (isNaN(value)) {\r\n            setAmount(0);\r\n            return;\r\n        }\r\n\r\n        if (value < 1000) {\r\n            setAmount(parseInt(value));\r\n        }\r\n    };\r\n\r\n    const handleAddProduct = () => {\r\n        dispatch(addProduct(product, amount));\r\n\r\n        setOpen(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const productsWithoutCurrentProduct = products.filter(product => product.id !== parseInt(id));\r\n        const randomNumbers = [];\r\n\r\n        const randomRecommendProducts = () => {\r\n            const randomNumber = Math.floor(Math.random() * productsWithoutCurrentProduct.length);\r\n\r\n            if (randomNumbers.includes(randomNumber)) {\r\n                randomRecommendProducts();\r\n            } else {\r\n                randomNumbers.push(randomNumber);\r\n            }\r\n\r\n            if (randomNumbers.length < 3) {\r\n                randomRecommendProducts();\r\n            }\r\n        };\r\n\r\n        randomRecommendProducts();\r\n\r\n        setRecommendProducts(randomNumbers.map(randomNumber => productsWithoutCurrentProduct[randomNumber]))\r\n    }, [id]);\r\n\r\n    return (\r\n        <>\r\n            <Card variant=\"outlined\">\r\n                <Grid container>\r\n                    <Grid item xs={12} md={7}>\r\n                        <div className={classes.fakeImage}>Image</div>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={5}>\r\n                        <div className={classes.content}>\r\n                            <Typography variant=\"h4\" className={classes.verticalMargin}>\r\n                                {title}\r\n                            </Typography>\r\n                            <Typography variant=\"h5\" className={clsx(classes.price, classes.verticalMargin)}>\r\n                                $ {price}\r\n                            </Typography>\r\n                            <Divider />\r\n                            <Typography color=\"textSecondary\" className={classes.verticalMargin}>\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce commodo quam vel aliquet sodales. Cras sit amet mollis turpis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce commodo quam vel aliquet sodales.\r\n                            </Typography>\r\n                            <Divider />\r\n                            <Grid container alignItems=\"center\" className={classes.verticalMargin}>\r\n                                <Grid item>\r\n                                    <IconButton onClick={decreaseAmount}>\r\n                                        <RemoveIcon />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        size=\"small\"\r\n                                        variant=\"outlined\"\r\n                                        className={classes.textField}\r\n                                        value={amount}\r\n                                        onChange={handleAmountOnChange}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <IconButton onClick={increaseAmount}>\r\n                                        <AddIcon />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                        className={classes.button}\r\n                                        onClick={handleAddProduct}\r\n                                        disabled={amount > 0 ? false : true}\r\n                                    >\r\n                                        Add to Cart\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Divider />\r\n                            <Typography variant=\"subtitle1\" className={classes.verticalMargin}>\r\n                                Recommend Products\r\n                            </Typography>\r\n                            <Grid container spacing={2}>\r\n                                {recommendProducts.map(({ id, title, price }) => (\r\n                                    <Grid xs={12} md={4} item key={id}>\r\n                                        <NavLink\r\n                                            to={`/product/${id}`}\r\n                                            className={classes.navLink}\r\n                                            onClick={() => setAmount(0)}\r\n                                        >\r\n                                            <ProductCard\r\n                                                recommend\r\n                                                title={title}\r\n                                                price={price}\r\n                                            />\r\n                                        </NavLink>\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Card>\r\n            <Snackbar\r\n                open={open}\r\n                onClose={handleClose}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                autoHideDuration={5000}\r\n                message={\r\n                    <Grid container alignItems=\"center\" spacing={1}>\r\n                        <Grid item>\r\n                            <DoneIcon className={classes.green} />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"subtitle2\">\r\n                                Add product to cart successfully!\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductDetail;","import React from 'react';\r\nimport {\r\n    Step,\r\n    StepLabel,\r\n    Stepper,\r\n    Hidden,\r\n    makeStyles,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    stepLabel: {\r\n        '& > .MuiStepLabel-iconContainer > .MuiStepIcon-root': {\r\n            color: theme.palette.secondary.light,\r\n        },\r\n    },\r\n}));\r\n\r\nconst StepperWrapper = props => {\r\n    const classes = useStyles();\r\n    const { step } = props;\r\n\r\n    const renderMobileStepper = () => {\r\n        switch(step) {\r\n            case 0:\r\n                return 'Cart';\r\n            case 1:\r\n                return 'Delivery';\r\n            case 2:\r\n                return 'Payment';\r\n            case 3:\r\n                return 'Confirmation';\r\n            default:\r\n                return '';\r\n        }\r\n    };\r\n\r\n    const renderDesktopStepper = () => {\r\n        return (\r\n            <Stepper activeStep={step}>\r\n                <Step>\r\n                    <StepLabel className={classes.stepLabel}>\r\n                        Cart\r\n                    </StepLabel>\r\n                </Step>\r\n                <Step>\r\n                    <StepLabel className={classes.stepLabel}>\r\n                        Delivery\r\n                    </StepLabel>\r\n                </Step>\r\n                <Step>\r\n                    <StepLabel className={classes.stepLabel}>\r\n                        Payment\r\n                    </StepLabel>\r\n                </Step>\r\n                <Step>\r\n                    <StepLabel className={classes.stepLabel}>\r\n                        Confirmation\r\n                    </StepLabel>\r\n                </Step>\r\n            </Stepper>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Hidden smUp>\r\n                {renderMobileStepper()}\r\n            </Hidden>\r\n            <Hidden smDown>\r\n                {renderDesktopStepper()}\r\n            </Hidden>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default StepperWrapper;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { Button, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    buttonGroup: {\r\n        float: 'right',\r\n    },\r\n    button: {\r\n        width: '80px',\r\n        margin: theme.spacing(0, 1),\r\n    },\r\n    hidden: {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\nconst ButtonGroup = (props) => {\r\n    const { step, setStep } = props;\r\n    const classes = useStyles();\r\n\r\n    const previousStep = () => {\r\n        if (step > 0) {\r\n            setStep(step - 1);\r\n        }\r\n    };\r\n\r\n    const nextStep = () => {\r\n        if (step < 3) {\r\n            setStep(step + 1);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        setStep(step + 1);\r\n    };\r\n\r\n    if (step > 3) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.buttonGroup}>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"default\"\r\n                onClick={previousStep}\r\n                className={clsx(classes.button, {\r\n                    [classes.hidden]: step === 0,\r\n                })}\r\n            >\r\n                Prev\r\n            </Button>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={nextStep}\r\n                className={clsx(classes.button, {\r\n                    [classes.hidden]: step === 3,\r\n                })}\r\n            >\r\n                Next\r\n            </Button>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={handleSubmit}\r\n                className={clsx(classes.button, {\r\n                    [classes.hidden]: step !== 3,\r\n                })}\r\n            >\r\n                Submit\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ButtonGroup;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n    Grid,\r\n    Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    fakeImage: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: 120,\r\n        height: 80,\r\n        background: '#eeeeee',\r\n    },\r\n    hideInMobile: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n}));\r\n\r\nconst Cart = () => {\r\n    const classes = useStyles();\r\n    const { productsInCart } = useSelector(state => state.cart);\r\n\r\n    return (\r\n        <Table>\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell>Product</TableCell>\r\n                    <TableCell align=\"center\">Amount</TableCell>\r\n                    <TableCell align=\"center\">Price</TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {productsInCart.map(({ title, amount, price }, index) => (\r\n                    <TableRow key={index}>\r\n                        <TableCell>\r\n                            <Grid container alignItems=\"center\" spacing={2}>\r\n                                <Grid item className={classes.hideInMobile}>\r\n                                    <div className={classes.fakeImage}>Image</div>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        {title}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{amount}</TableCell>\r\n                        <TableCell align=\"center\">{price * amount}</TableCell>\r\n                    </TableRow>\r\n                ))}\r\n            </TableBody>\r\n        </Table>\r\n    );\r\n};\r\n\r\nexport default Cart;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    Grid,\r\n    TextField,\r\n    makeStyles,\r\n    Typography,\r\n    Select,\r\n    MenuItem,\r\n    FormControl,\r\n    InputLabel,\r\n} from '@material-ui/core';\r\n\r\nimport { formActions } from '../../../actions';\r\n\r\nconst { setForm } = formActions;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        margin: 'auto',\r\n        maxWidth: 720,\r\n        [theme.breakpoints.down('sm')]: {\r\n            maxWidth: '100%',\r\n        },\r\n    },\r\n    textField: {\r\n        minWidth: 240,\r\n        maxWidth: 496,\r\n    },\r\n    title: {\r\n        margin: theme.spacing(1, 0),\r\n    },\r\n    formControl: {\r\n        minWidth: 180,\r\n        maxWidth: 320,\r\n    },\r\n    content: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst Delivery = ({confirmation}) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const form = useSelector(state => state.form);\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n                Info\r\n            </Typography>\r\n            <Grid container spacing={2} className={classes.content}>\r\n                <Grid item>\r\n                    <TextField\r\n                        fullWidth\r\n                        label=\"First Name\"\r\n                        className={classes.textField}\r\n                        disabled={confirmation}\r\n                        value={form.firstName || ''}\r\n                        onChange={event => dispatch(setForm('firstName', event.target.value))}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <TextField\r\n                        fullWidth\r\n                        label=\"Last Name\"\r\n                        className={classes.textField}\r\n                        disabled={confirmation}\r\n                        value={form.lastName || ''}\r\n                        onChange={event => dispatch(setForm('lastName', event.target.value))}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n                Contact\r\n            </Typography>\r\n            <Grid container spacing={2} className={classes.content}>\r\n                <Grid item>\r\n                    <TextField\r\n                        fullWidth\r\n                        label=\"Phone\"\r\n                        className={classes.textField}\r\n                        disabled={confirmation}\r\n                        value={form.phone || ''}\r\n                        onChange={event => dispatch(setForm('phone', event.target.value))}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <TextField\r\n                        fullWidth\r\n                        label=\"E-mail\"\r\n                        className={classes.textField}\r\n                        disabled={confirmation}\r\n                        value={form.email || ''}\r\n                        onChange={event => dispatch(setForm('email', event.target.value))}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n                Shipping\r\n            </Typography>\r\n            <Grid container spacing={2} className={classes.content}>\r\n                <Grid item>\r\n                    <FormControl fullWidth className={classes.formControl}>\r\n                        <InputLabel>Country</InputLabel>\r\n                        <Select\r\n                            fullWidth\r\n                            value={form.country || ''}\r\n                            disabled={confirmation}\r\n                            onChange={event => dispatch(setForm('country', event.target.value))}\r\n                        >\r\n                            <MenuItem value=\"Taiwan\">Taiwan</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item>\r\n                    <FormControl fullWidth className={classes.formControl}>\r\n                        <InputLabel>City</InputLabel>\r\n                        <Select\r\n                            fullWidth\r\n                            value={form.city || ''}\r\n                            disabled={confirmation}\r\n                            onChange={event => dispatch(setForm('city', event.target.value))}\r\n                        >\r\n                            <MenuItem value=\"Taipei\">Taipei</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item>\r\n                    <TextField\r\n                        fullWidth\r\n                        label=\"Address\"\r\n                        className={classes.textField}\r\n                        disabled={confirmation}\r\n                        value={form.address || ''}\r\n                        onChange={event => dispatch(setForm('address', event.target.value))}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Delivery;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport clsx from 'clsx';\r\nimport {\r\n    Grid,\r\n    TextField,\r\n    makeStyles,\r\n    Select,\r\n    MenuItem,\r\n    Typography,\r\n    IconButton,\r\n    Avatar,\r\n} from '@material-ui/core';\r\n\r\nimport { formActions } from '../../../actions';\r\n\r\nconst { setForm } = formActions;\r\n\r\nconst months = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\r\nconst years = [...Array(100).keys()];\r\nconst icons = [\r\n    {\r\n        name: 'MasterCard',\r\n        src: 'https://image.flaticon.com/icons/svg/196/196561.svg',\r\n    },\r\n    {\r\n        name: 'VISA',\r\n        src: 'https://image.flaticon.com/icons/svg/196/196578.svg',\r\n    },\r\n    {\r\n        name: 'PayPal',\r\n        src: 'https://image.flaticon.com/icons/svg/174/174861.svg',\r\n    },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        margin: 'auto',\r\n        maxWidth: 720,\r\n        [theme.breakpoints.down('sm')]: {\r\n            maxWidth: '100%',\r\n        },\r\n    },\r\n    content: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    textField: {\r\n        minWidth: 240,\r\n    },\r\n    cvv: {\r\n        width: 60,\r\n    },\r\n    iconContainer: {\r\n        margin: theme.spacing(1, 0),\r\n    },\r\n    icon: {\r\n        border: '2px solid #eeeeee',\r\n        boxSizing: 'border-box',\r\n        margin: theme.spacing(0, 1),\r\n\r\n        '&:hover': {\r\n            background: '#ffe8ef',\r\n        },\r\n    },\r\n    active: {\r\n        background: '#ffeff4',\r\n        borderColor: '#ffeff4',\r\n    },\r\n}));\r\n\r\nconst Payment = ({confirmation}) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const form = useSelector(state => state.form);\r\n    const [selected, setSelected] = useState(form.card || 'MasterCard');\r\n\r\n    const handleSelect = (name) => {\r\n        setSelected(name);\r\n        dispatch(setForm('card', name));\r\n    };\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <Typography variant=\"h6\">\r\n                Card\r\n            </Typography>\r\n            <div className={classes.iconContainer}>\r\n                {icons.map(({ name, src }) => (\r\n                    <IconButton\r\n                        key={name}\r\n                        disabled={confirmation}\r\n                        onClick={() => handleSelect(name)}\r\n                        className={clsx(classes.icon, selected === name ? classes.active : null)}\r\n                    >\r\n                        <Avatar src={src} />\r\n                    </IconButton>\r\n                ))}\r\n            </div>\r\n            <Typography variant=\"h6\">\r\n                Card Info\r\n            </Typography>\r\n            <Grid container spacing={2} className={classes.content}>\r\n                <Grid item>\r\n                    <TextField\r\n                        fullWidth\r\n                        label=\"Cardholder Name\"\r\n                        disabled={confirmation}\r\n                        className={classes.textField}\r\n                        value={form.cardholderName || ''}\r\n                        onChange={event => dispatch(setForm('cardholderName', event.target.value))}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <TextField\r\n                        fullWidth\r\n                        label=\"Card Number\"\r\n                        disabled={confirmation}\r\n                        className={classes.textField}\r\n                        value={form.cardNumber || ''}\r\n                        onChange={event => dispatch(setForm('cardNumber', event.target.value))}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={6}>\r\n                <Grid item>\r\n                    <Typography variant=\"h6\">\r\n                        End Date\r\n                    </Typography>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item>\r\n                            <Select\r\n                                value={form.endMonth || 0}\r\n                                disabled={confirmation}\r\n                                onChange={event => dispatch(setForm('endMonth', event.target.value))}\r\n                            >\r\n                                <MenuItem value={0} disabled>MM</MenuItem>\r\n                                {months.map(month => (\r\n                                    <MenuItem value={month} key={month}>{month}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Select\r\n                                value={form.endYear || 0}\r\n                                disabled={confirmation}\r\n                                onChange={event => dispatch(setForm('endYear', event.target.value))}\r\n                            >\r\n                                <MenuItem value={0} disabled>YYYY</MenuItem>\r\n                                {years.map(year => (\r\n                                    <MenuItem value={1900 + year} key={year}>{1900 + year}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant=\"h6\">\r\n                        CVV\r\n                    </Typography>\r\n                    <TextField\r\n                        value={form.cvv || ''}\r\n                        className={classes.cvv}\r\n                        disabled={confirmation}\r\n                        onChange={event => dispatch(setForm('cvv', event.target.value))}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Payment;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nimport Cart from './Cart';\r\nimport PriceTotal from '../../../components/PriceTotal';\r\nimport Delivery from './Delivery';\r\nimport Payment from './Payment';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        maxWidth: 720,\r\n        margin: 'auto',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    priceTotal: {\r\n        float: 'right',\r\n    },\r\n    content: {\r\n        paddingTop: theme.spacing(4),\r\n    },\r\n    textField: {\r\n        display: 'block',\r\n    },\r\n}));\r\n\r\nconst Confirmation = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <Cart />\r\n            <div className={classes.priceTotal}>\r\n                <PriceTotal />\r\n            </div>\r\n            <div className={classes.content}>\r\n                <Delivery confirmation />\r\n                <Payment confirmation />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Confirmation;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {\r\n    Button,\r\n    makeStyles,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { CheckCircleOutline as CheckCircleOutlineIcon } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        margin: 'auto 0',\r\n        textAlign: 'center',\r\n    },\r\n    icon: {\r\n        width: 72,\r\n        height: 72,\r\n        color: theme.palette.success.main,\r\n        margin: 'auto',\r\n    },\r\n    navLink: {\r\n        textDecoration: 'none',\r\n        margin: 'auto',\r\n    },\r\n    text: {\r\n        margin: theme.spacing(4, 0),\r\n    },\r\n}));\r\n\r\nconst Completed = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <CheckCircleOutlineIcon className={classes.icon} />\r\n            <Typography variant=\"h6\" align=\"center\" className={classes.text}>\r\n                Congratulations. Your order is accepted.\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" align=\"center\" className={classes.text}>\r\n                Let me be clear. Not even close. We did not go\r\n                <br />\r\n                by choice, we went because of necessiry.\r\n            </Typography>\r\n            <NavLink to=\"/\" className={classes.navLink}>\r\n                <Button variant=\"contained\" color=\"secondary\">Back To Home</Button>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Completed;","import React, { useState } from 'react';\r\nimport {\r\n    Grid,\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    makeStyles,\r\n} from '@material-ui/core';\r\n\r\nimport Stepper from './components/Stepper';\r\nimport ButtonGroup from './components/ButtonGroup';\r\nimport PriceTotal from '../../components/PriceTotal';\r\n\r\nimport Cart from './components/Cart';\r\nimport Delivery from './components/Delivery';\r\nimport Payment from './components/Payment';\r\nimport Confirmation from './components/Confirmation';\r\nimport Completed from './components/Completed';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        padding: theme.spacing(2, 1),\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        minHeight: 560,\r\n    },\r\n    footer: {\r\n        marginTop: 'auto',\r\n    },\r\n}));\r\n\r\nconst CheckOut = () => {\r\n    const [step, setStep] = useState(0);\r\n    const classes = useStyles();\r\n\r\n    const renderContent = () => {\r\n        switch (step) {\r\n            case 0:\r\n                return <Cart />;\r\n            case 1:\r\n                return <Delivery />;\r\n            case 2:\r\n                return <Payment />;\r\n            case 3:\r\n                return <Confirmation />;\r\n            case 4:\r\n                return <Completed />;\r\n            default:\r\n                return '';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.card} variant=\"outlined\">\r\n            <CardHeader title={<Stepper step={step} />} />\r\n            <CardContent className={classes.content}>\r\n                {renderContent()}\r\n                <Grid\r\n                    container\r\n                    alignItems=\"flex-end\"\r\n                    justify=\"flex-end\"\r\n                    spacing={1}\r\n                    className={classes.footer}\r\n                >\r\n                    <Grid item>\r\n                        {step === 0 && (\r\n                            <PriceTotal />\r\n                        )}\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <ButtonGroup step={step} setStep={setStep} />\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default CheckOut;","import React from 'react';\r\nimport {\r\n    BrowserRouter,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from 'react-router-dom';\r\n\r\nimport Layout from '../../components/Layout';\r\nimport Home from '../Home';\r\nimport Product from '../Product';\r\nimport ProductDetail from '../ProductDetail';\r\nimport CheckOut from '../CheckOut';\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Switch>\r\n                <Layout>\r\n                    <Route path=\"/\" exact component={Home} />\r\n                    <Route path=\"/product\" exact component={Product} />\r\n                    <Route path=\"/product/:id\" component={ProductDetail} />\r\n                    <Route path=\"/checkout\" component={CheckOut} />\r\n                </Layout>\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default App;","import { cartConstants } from '../constants';\r\n\r\nconst {\r\n    ADD_PRODUCT,\r\n    REMOVE_PRODUCT,\r\n} = cartConstants;\r\n\r\nconst initialState = {\r\n    productsInCart: JSON.parse(localStorage.getItem('cart')) || [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_PRODUCT:\r\n            return { ...state, productsInCart: [...action.payload] };\r\n        case REMOVE_PRODUCT:\r\n            return { ...state, productsInCart: [...action.payload] };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { formConstants } from '../constants';\r\n\r\nconst { SET_FORM } = formConstants;\r\n\r\nconst initialState = {};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_FORM:\r\n            return { ...state, [action.payload.fieldName]: action.payload.value };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport cartReducer from './cartReducer';\r\nimport formReducer from './formReducer';\r\n\r\nexport default combineReducers({\r\n    cart: cartReducer,\r\n    form: formReducer,\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n\r\nimport App from './containers/App';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root'),\r\n);"],"sourceRoot":""}